{
  "articles/README.html": {
    "href": "articles/README.html",
    "title": "TAML | TAML",
    "keywords": "TAML Specification Sample Documents and Test Suite Simple KeyValuePairs Simple Array Child Arrays Child KeyValue Pairs Available Interpreters dotNET python Mockups of Well-Known Documents as TAML Package.JSON -- Node Package Format Appsettings.JSON -- .NET Configuration Format kubernetes configuration.yml workflow.yml -- GitHub Action specification in YAML"
  },
  "articles/interpreters/dotnet.html": {
    "href": "articles/interpreters/dotnet.html",
    "title": ".NET | TAML",
    "keywords": ".NET Issue 1"
  },
  "articles/interpreters/python.html": {
    "href": "articles/interpreters/python.html",
    "title": "python | TAML",
    "keywords": "python Issue 3"
  },
  "index.html": {
    "href": "index.html",
    "title": "About | TAML",
    "keywords": "About TAML - Tab Annotated Markup Language Defining the coolest and simplest markup language delimited ONLY by tabs and carriage returns All TAML documents adhere to these rules STRICTLY: New entries are separated by carriage returns (CR / CRLF) Keys and values are separated by 1+ tab characters (\\t) Subkeys are defined on a line starting with 1+ tab characters (\\t) An array is a key with multiple child values Presence of space characters for delimiting are illegal See the Articles to Get Started, to review the specification, learn more about the available parsers and to review some sample TAML documents."
  },
  "README.html": {
    "href": "README.html",
    "title": "Official Documentation for TAML - Tab Annotated Markup Language | TAML",
    "keywords": "Official Documentation for TAML - Tab Annotated Markup Language See index.md for the start of the documentation"
  },
  "articles/interpreters/javascript.html": {
    "href": "articles/interpreters/javascript.html",
    "title": "JavaScript | TAML",
    "keywords": "JavaScript Not available yet: Issue 2"
  }
}